<?php
/**
 * ShipmentGetShipmentGetShipmentMetaGetAddress
 *
 * PHP version 5
 *
 * @category Class
 * @package  TrackMage\Client\Swagger
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TrackMage API
 *
 * TrackMage API
 *
 * The version of the OpenAPI document: v0.1.41-7-gcca08cf
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TrackMage\Client\Swagger\Model;

use \ArrayAccess;
use \TrackMage\Client\Swagger\ObjectSerializer;

/**
 * ShipmentGetShipmentGetShipmentMetaGetAddress Class Doc Comment
 *
 * @category Class
 * @package  TrackMage\Client\Swagger
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ShipmentGetShipmentGetShipmentMetaGetAddress implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Shipment-getShipment_getShipmentMeta_getAddress';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'trackingNumber' => 'string',
        'status' => 'string',
        'orderNumbers' => 'string[]',
        'email' => 'string',
        'daysInTransit' => 'int',
        'originCarrier' => 'string',
        'destinationCarrier' => 'string',
        'originCountry' => 'string',
        'destinationCountry' => 'string',
        'originCountryIso2' => 'string',
        'destinationCountryIso2' => 'string',
        'shippedAt' => '\DateTime',
        'expectedDeliveryDate' => '\DateTime',
        'createdAt' => '\DateTime',
        'updatedAt' => '\DateTime',
        'lastStatusUpdate' => '\DateTime',
        'workspace' => 'string',
        'review' => 'string',
        'reviewTotalScore' => 'float',
        'orders' => 'string[]',
        'externalSource' => 'string',
        'externalSyncId' => 'string',
        'address' => 'string',
        'checkpoints' => 'string[]',
        'shipmentItems' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'trackingNumber' => null,
        'status' => null,
        'orderNumbers' => null,
        'email' => null,
        'daysInTransit' => null,
        'originCarrier' => null,
        'destinationCarrier' => null,
        'originCountry' => null,
        'destinationCountry' => null,
        'originCountryIso2' => null,
        'destinationCountryIso2' => null,
        'shippedAt' => 'date-time',
        'expectedDeliveryDate' => 'date-time',
        'createdAt' => 'date-time',
        'updatedAt' => 'date-time',
        'lastStatusUpdate' => 'date-time',
        'workspace' => null,
        'review' => null,
        'reviewTotalScore' => null,
        'orders' => null,
        'externalSource' => null,
        'externalSyncId' => null,
        'address' => null,
        'checkpoints' => null,
        'shipmentItems' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'trackingNumber' => 'trackingNumber',
        'status' => 'status',
        'orderNumbers' => 'orderNumbers',
        'email' => 'email',
        'daysInTransit' => 'daysInTransit',
        'originCarrier' => 'originCarrier',
        'destinationCarrier' => 'destinationCarrier',
        'originCountry' => 'originCountry',
        'destinationCountry' => 'destinationCountry',
        'originCountryIso2' => 'originCountryIso2',
        'destinationCountryIso2' => 'destinationCountryIso2',
        'shippedAt' => 'shippedAt',
        'expectedDeliveryDate' => 'expectedDeliveryDate',
        'createdAt' => 'createdAt',
        'updatedAt' => 'updatedAt',
        'lastStatusUpdate' => 'lastStatusUpdate',
        'workspace' => 'workspace',
        'review' => 'review',
        'reviewTotalScore' => 'reviewTotalScore',
        'orders' => 'orders',
        'externalSource' => 'externalSource',
        'externalSyncId' => 'externalSyncId',
        'address' => 'address',
        'checkpoints' => 'checkpoints',
        'shipmentItems' => 'shipmentItems'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'trackingNumber' => 'setTrackingNumber',
        'status' => 'setStatus',
        'orderNumbers' => 'setOrderNumbers',
        'email' => 'setEmail',
        'daysInTransit' => 'setDaysInTransit',
        'originCarrier' => 'setOriginCarrier',
        'destinationCarrier' => 'setDestinationCarrier',
        'originCountry' => 'setOriginCountry',
        'destinationCountry' => 'setDestinationCountry',
        'originCountryIso2' => 'setOriginCountryIso2',
        'destinationCountryIso2' => 'setDestinationCountryIso2',
        'shippedAt' => 'setShippedAt',
        'expectedDeliveryDate' => 'setExpectedDeliveryDate',
        'createdAt' => 'setCreatedAt',
        'updatedAt' => 'setUpdatedAt',
        'lastStatusUpdate' => 'setLastStatusUpdate',
        'workspace' => 'setWorkspace',
        'review' => 'setReview',
        'reviewTotalScore' => 'setReviewTotalScore',
        'orders' => 'setOrders',
        'externalSource' => 'setExternalSource',
        'externalSyncId' => 'setExternalSyncId',
        'address' => 'setAddress',
        'checkpoints' => 'setCheckpoints',
        'shipmentItems' => 'setShipmentItems'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'trackingNumber' => 'getTrackingNumber',
        'status' => 'getStatus',
        'orderNumbers' => 'getOrderNumbers',
        'email' => 'getEmail',
        'daysInTransit' => 'getDaysInTransit',
        'originCarrier' => 'getOriginCarrier',
        'destinationCarrier' => 'getDestinationCarrier',
        'originCountry' => 'getOriginCountry',
        'destinationCountry' => 'getDestinationCountry',
        'originCountryIso2' => 'getOriginCountryIso2',
        'destinationCountryIso2' => 'getDestinationCountryIso2',
        'shippedAt' => 'getShippedAt',
        'expectedDeliveryDate' => 'getExpectedDeliveryDate',
        'createdAt' => 'getCreatedAt',
        'updatedAt' => 'getUpdatedAt',
        'lastStatusUpdate' => 'getLastStatusUpdate',
        'workspace' => 'getWorkspace',
        'review' => 'getReview',
        'reviewTotalScore' => 'getReviewTotalScore',
        'orders' => 'getOrders',
        'externalSource' => 'getExternalSource',
        'externalSyncId' => 'getExternalSyncId',
        'address' => 'getAddress',
        'checkpoints' => 'getCheckpoints',
        'shipmentItems' => 'getShipmentItems'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['trackingNumber'] = isset($data['trackingNumber']) ? $data['trackingNumber'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['orderNumbers'] = isset($data['orderNumbers']) ? $data['orderNumbers'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['daysInTransit'] = isset($data['daysInTransit']) ? $data['daysInTransit'] : null;
        $this->container['originCarrier'] = isset($data['originCarrier']) ? $data['originCarrier'] : null;
        $this->container['destinationCarrier'] = isset($data['destinationCarrier']) ? $data['destinationCarrier'] : null;
        $this->container['originCountry'] = isset($data['originCountry']) ? $data['originCountry'] : null;
        $this->container['destinationCountry'] = isset($data['destinationCountry']) ? $data['destinationCountry'] : null;
        $this->container['originCountryIso2'] = isset($data['originCountryIso2']) ? $data['originCountryIso2'] : null;
        $this->container['destinationCountryIso2'] = isset($data['destinationCountryIso2']) ? $data['destinationCountryIso2'] : null;
        $this->container['shippedAt'] = isset($data['shippedAt']) ? $data['shippedAt'] : null;
        $this->container['expectedDeliveryDate'] = isset($data['expectedDeliveryDate']) ? $data['expectedDeliveryDate'] : null;
        $this->container['createdAt'] = isset($data['createdAt']) ? $data['createdAt'] : null;
        $this->container['updatedAt'] = isset($data['updatedAt']) ? $data['updatedAt'] : null;
        $this->container['lastStatusUpdate'] = isset($data['lastStatusUpdate']) ? $data['lastStatusUpdate'] : null;
        $this->container['workspace'] = isset($data['workspace']) ? $data['workspace'] : null;
        $this->container['review'] = isset($data['review']) ? $data['review'] : null;
        $this->container['reviewTotalScore'] = isset($data['reviewTotalScore']) ? $data['reviewTotalScore'] : null;
        $this->container['orders'] = isset($data['orders']) ? $data['orders'] : null;
        $this->container['externalSource'] = isset($data['externalSource']) ? $data['externalSource'] : null;
        $this->container['externalSyncId'] = isset($data['externalSyncId']) ? $data['externalSyncId'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['checkpoints'] = isset($data['checkpoints']) ? $data['checkpoints'] : null;
        $this->container['shipmentItems'] = isset($data['shipmentItems']) ? $data['shipmentItems'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['workspace'] === null) {
            $invalidProperties[] = "'workspace' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets trackingNumber
     *
     * @return string|null
     */
    public function getTrackingNumber()
    {
        return $this->container['trackingNumber'];
    }

    /**
     * Sets trackingNumber
     *
     * @param string|null $trackingNumber trackingNumber
     *
     * @return $this
     */
    public function setTrackingNumber($trackingNumber)
    {
        $this->container['trackingNumber'] = $trackingNumber;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets orderNumbers
     *
     * @return string[]|null
     */
    public function getOrderNumbers()
    {
        return $this->container['orderNumbers'];
    }

    /**
     * Sets orderNumbers
     *
     * @param string[]|null $orderNumbers orderNumbers
     *
     * @return $this
     */
    public function setOrderNumbers($orderNumbers)
    {
        $this->container['orderNumbers'] = $orderNumbers;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets daysInTransit
     *
     * @return int|null
     */
    public function getDaysInTransit()
    {
        return $this->container['daysInTransit'];
    }

    /**
     * Sets daysInTransit
     *
     * @param int|null $daysInTransit daysInTransit
     *
     * @return $this
     */
    public function setDaysInTransit($daysInTransit)
    {
        $this->container['daysInTransit'] = $daysInTransit;

        return $this;
    }

    /**
     * Gets originCarrier
     *
     * @return string|null
     */
    public function getOriginCarrier()
    {
        return $this->container['originCarrier'];
    }

    /**
     * Sets originCarrier
     *
     * @param string|null $originCarrier originCarrier
     *
     * @return $this
     */
    public function setOriginCarrier($originCarrier)
    {
        $this->container['originCarrier'] = $originCarrier;

        return $this;
    }

    /**
     * Gets destinationCarrier
     *
     * @return string|null
     */
    public function getDestinationCarrier()
    {
        return $this->container['destinationCarrier'];
    }

    /**
     * Sets destinationCarrier
     *
     * @param string|null $destinationCarrier destinationCarrier
     *
     * @return $this
     */
    public function setDestinationCarrier($destinationCarrier)
    {
        $this->container['destinationCarrier'] = $destinationCarrier;

        return $this;
    }

    /**
     * Gets originCountry
     *
     * @return string|null
     */
    public function getOriginCountry()
    {
        return $this->container['originCountry'];
    }

    /**
     * Sets originCountry
     *
     * @param string|null $originCountry originCountry
     *
     * @return $this
     */
    public function setOriginCountry($originCountry)
    {
        $this->container['originCountry'] = $originCountry;

        return $this;
    }

    /**
     * Gets destinationCountry
     *
     * @return string|null
     */
    public function getDestinationCountry()
    {
        return $this->container['destinationCountry'];
    }

    /**
     * Sets destinationCountry
     *
     * @param string|null $destinationCountry destinationCountry
     *
     * @return $this
     */
    public function setDestinationCountry($destinationCountry)
    {
        $this->container['destinationCountry'] = $destinationCountry;

        return $this;
    }

    /**
     * Gets originCountryIso2
     *
     * @return string|null
     */
    public function getOriginCountryIso2()
    {
        return $this->container['originCountryIso2'];
    }

    /**
     * Sets originCountryIso2
     *
     * @param string|null $originCountryIso2 originCountryIso2
     *
     * @return $this
     */
    public function setOriginCountryIso2($originCountryIso2)
    {
        $this->container['originCountryIso2'] = $originCountryIso2;

        return $this;
    }

    /**
     * Gets destinationCountryIso2
     *
     * @return string|null
     */
    public function getDestinationCountryIso2()
    {
        return $this->container['destinationCountryIso2'];
    }

    /**
     * Sets destinationCountryIso2
     *
     * @param string|null $destinationCountryIso2 destinationCountryIso2
     *
     * @return $this
     */
    public function setDestinationCountryIso2($destinationCountryIso2)
    {
        $this->container['destinationCountryIso2'] = $destinationCountryIso2;

        return $this;
    }

    /**
     * Gets shippedAt
     *
     * @return \DateTime|null
     */
    public function getShippedAt()
    {
        return $this->container['shippedAt'];
    }

    /**
     * Sets shippedAt
     *
     * @param \DateTime|null $shippedAt shippedAt
     *
     * @return $this
     */
    public function setShippedAt($shippedAt)
    {
        $this->container['shippedAt'] = $shippedAt;

        return $this;
    }

    /**
     * Gets expectedDeliveryDate
     *
     * @return \DateTime|null
     */
    public function getExpectedDeliveryDate()
    {
        return $this->container['expectedDeliveryDate'];
    }

    /**
     * Sets expectedDeliveryDate
     *
     * @param \DateTime|null $expectedDeliveryDate expectedDeliveryDate
     *
     * @return $this
     */
    public function setExpectedDeliveryDate($expectedDeliveryDate)
    {
        $this->container['expectedDeliveryDate'] = $expectedDeliveryDate;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param \DateTime|null $createdAt createdAt
     *
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets updatedAt
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updatedAt'];
    }

    /**
     * Sets updatedAt
     *
     * @param \DateTime|null $updatedAt updatedAt
     *
     * @return $this
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->container['updatedAt'] = $updatedAt;

        return $this;
    }

    /**
     * Gets lastStatusUpdate
     *
     * @return \DateTime|null
     */
    public function getLastStatusUpdate()
    {
        return $this->container['lastStatusUpdate'];
    }

    /**
     * Sets lastStatusUpdate
     *
     * @param \DateTime|null $lastStatusUpdate lastStatusUpdate
     *
     * @return $this
     */
    public function setLastStatusUpdate($lastStatusUpdate)
    {
        $this->container['lastStatusUpdate'] = $lastStatusUpdate;

        return $this;
    }

    /**
     * Gets workspace
     *
     * @return string
     */
    public function getWorkspace()
    {
        return $this->container['workspace'];
    }

    /**
     * Sets workspace
     *
     * @param string $workspace workspace
     *
     * @return $this
     */
    public function setWorkspace($workspace)
    {
        $this->container['workspace'] = $workspace;

        return $this;
    }

    /**
     * Gets review
     *
     * @return string|null
     */
    public function getReview()
    {
        return $this->container['review'];
    }

    /**
     * Sets review
     *
     * @param string|null $review review
     *
     * @return $this
     */
    public function setReview($review)
    {
        $this->container['review'] = $review;

        return $this;
    }

    /**
     * Gets reviewTotalScore
     *
     * @return float|null
     */
    public function getReviewTotalScore()
    {
        return $this->container['reviewTotalScore'];
    }

    /**
     * Sets reviewTotalScore
     *
     * @param float|null $reviewTotalScore reviewTotalScore
     *
     * @return $this
     */
    public function setReviewTotalScore($reviewTotalScore)
    {
        $this->container['reviewTotalScore'] = $reviewTotalScore;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return string[]|null
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param string[]|null $orders orders
     *
     * @return $this
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets externalSource
     *
     * @return string|null
     */
    public function getExternalSource()
    {
        return $this->container['externalSource'];
    }

    /**
     * Sets externalSource
     *
     * @param string|null $externalSource externalSource
     *
     * @return $this
     */
    public function setExternalSource($externalSource)
    {
        $this->container['externalSource'] = $externalSource;

        return $this;
    }

    /**
     * Gets externalSyncId
     *
     * @return string|null
     */
    public function getExternalSyncId()
    {
        return $this->container['externalSyncId'];
    }

    /**
     * Sets externalSyncId
     *
     * @param string|null $externalSyncId externalSyncId
     *
     * @return $this
     */
    public function setExternalSyncId($externalSyncId)
    {
        $this->container['externalSyncId'] = $externalSyncId;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets checkpoints
     *
     * @return string[]|null
     */
    public function getCheckpoints()
    {
        return $this->container['checkpoints'];
    }

    /**
     * Sets checkpoints
     *
     * @param string[]|null $checkpoints checkpoints
     *
     * @return $this
     */
    public function setCheckpoints($checkpoints)
    {
        $this->container['checkpoints'] = $checkpoints;

        return $this;
    }

    /**
     * Gets shipmentItems
     *
     * @return string[]|null
     */
    public function getShipmentItems()
    {
        return $this->container['shipmentItems'];
    }

    /**
     * Sets shipmentItems
     *
     * @param string[]|null $shipmentItems shipmentItems
     *
     * @return $this
     */
    public function setShipmentItems($shipmentItems)
    {
        $this->container['shipmentItems'] = $shipmentItems;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


